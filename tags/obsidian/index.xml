<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Obsidian on Title Goes Here</title><link>https://blog.piper-security.net/tags/obsidian/</link><description>Recent content in Obsidian on Title Goes Here</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 30 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.piper-security.net/tags/obsidian/index.xml" rel="self" type="application/rss+xml"/><item><title>blogging setup</title><link>https://blog.piper-security.net/post/blogging-setup/</link><pubDate>Thu, 30 Jun 2022 00:00:00 +0000</pubDate><guid>https://blog.piper-security.net/post/blogging-setup/</guid><description>&lt;h2 id="tldr">TLDR&lt;/h2>
&lt;p>&lt;a href="https://gohugo.io">Hugo&lt;/a> as a Static Site Generator fits my needs and the way I think about programming. It&amp;rsquo;s modular approach and the fact that it&amp;rsquo;s written in Golang means I can dig under the hood when required, but there are a ton of great themes out there as a starting point.&lt;/p>
&lt;h2 id="intro">Intro&lt;/h2>
&lt;p>This blog is generated by a Static Site Generator. The TLDR is that this allows for content to be written on Markdown format and turned into a website with &lt;em>static content&lt;/em>. This type of website is much simpler because you merely have to host a directory of files and not a full web server with your tech stack installed for the website to work.&lt;/p>
&lt;p>What this &lt;em>doesn&amp;rsquo;t&lt;/em> mean is that you won&amp;rsquo;t still have to write some web stuff (HTML, CSS, JavaScript) in order to make it your own. When I started this blog (and wrote all of two posts&amp;hellip;) I used the &lt;a href="https://jekyllrb.com">Jekyll&lt;/a> SSG which runs in Ruby. I had issues with version dependencies and some themes I was trying out, so I switched to Hugo which &lt;em>seems&lt;/em> to be more flexible and is purportedly fast when dealing with large sites.&lt;/p>
&lt;h2 id="hugo">Hugo&lt;/h2>
&lt;p>If you&amp;rsquo;re new to Static Site generators, go &lt;a href="https://gohugo.io/about/what-is-hugo/">RTFM&lt;/a> but basically it takes Markdown documents and pre-renders all of the elements for a website. HTML, CSS, etc are all pre-packaged in a directory that&amp;rsquo;s published to the internet and browsable.&lt;/p>
&lt;p>The nice thing about both Hugo and Jekyll is that they allow you to preview the content locally via a locally running web server. Executing &lt;code>hugo serve&lt;/code> in a directory with a config file and an expected structure will give you a link.&lt;/p>
&lt;p>&lt;img src="Pasted%20image%2020220701001901.png" alt="hugo server running">
The nice thing is that even though I specified &lt;code>https://blog.piper-security.net&lt;/code> as the site&amp;rsquo;s URL in the config file, Hugo was smart enough to know that I&amp;rsquo;m viewing it locally and instead sets the site URL to &lt;code>localhost&lt;/code>.&lt;/p>
&lt;p>What&amp;rsquo;s &lt;em>really&lt;/em> nice about this is that (by default) the page will reload if you make edits to the local file. This is really helpful when you&amp;rsquo;re trying to troubleshoot why a link isn&amp;rsquo;t working like it should.&lt;/p>
&lt;p>This is just a summary of Hugo, more details to come as I learn more about how it parses and converts Markdown into a website.&lt;/p>
&lt;h2 id="obsidian">Obsidian&lt;/h2>
&lt;p>I love &lt;a href="https://obsidian.md">Obsidian&lt;/a> as a personal knowledge management application, so I was very interested in using it to write and manage content for this site. Besides being a familiar interface, Obsidian has many nice quality-of-life features due to being designed as a Markdown editor from the start. These include:&lt;/p>
&lt;ul>
&lt;li>Automatic completion of pairs such as &lt;code>()&lt;/code> and &lt;code>{}&lt;/code>.&lt;/li>
&lt;li>Syntax highlighting and an interface that has panes relevant to writing, not programming.&lt;/li>
&lt;li>Community plugins (more on that to come).&lt;/li>
&lt;li>It&amp;rsquo;s cross platform (Linux, Windows, macOS, mobile, etc).&lt;/li>
&lt;li>Automation such as default locations for attachments and new notes, while updating reference links if you move files.&lt;/li>
&lt;/ul>
&lt;p>I&amp;rsquo;ll make a separate post about my Obsidian setup in detail, as I had to cobble it together from all over the internet. #everythingiscontent&lt;/p></description></item></channel></rss>